import telebot
from config import keys, TOKEN
from extensions import CryptoConverter, ConvertionException

bot = telebot.TeleBot(TOKEN)


# START –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞.
@bot.message_handler(commands=['start'])
def start(message: telebot.types.Message):
    text = 'ü§ñ\n' \
           '–ë–æ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é –≤–∞–ª—é—Ç.\n\n' \
           '–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n' \
           '<–Ω–∞–∑–≤–∞–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω–æ–π –≤–∞–ª—é—Ç—ã> <–≤ –∫–∞–∫—É—é –≤–∞–ª—é—Ç—É –ø–µ—Ä–µ–≤–µ—Å—Ç–∏> <—Å—É–º–º–∞ –∏—Å—Ö–æ–¥–Ω–æ–π –≤–∞–ª—é—Ç—ã>\n' \
           '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∞–ª—é—Ç: /values\n' \
           '–ü—Ä–æ—Å–º–æ—Ç—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞: /help\n'
    bot.reply_to(message, text)


# HELP –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞.
@bot.message_handler(commands=['help'])
def help(message: telebot.types.Message):
    text = 'üìñ\n' \
           '–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n' \
           '<–Ω–∞–∑–≤–∞–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω–æ–π –≤–∞–ª—é—Ç—ã> <–≤ –∫–∞–∫—É—é –≤–∞–ª—é—Ç—É –ø–µ—Ä–µ–≤–µ—Å—Ç–∏> <—Å—É–º–º–∞ –∏—Å—Ö–æ–¥–Ω–æ–π –≤–∞–ª—é—Ç—ã>\n' \
           '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∞–ª—é—Ç: /values'
    bot.reply_to(message, text)


# VALUES —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∞–ª—é—Ç.
@bot.message_handler(commands=['values'])
def values(message: telebot.types.Message):
    text = '¬§\n' \
           '–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ã:'
    for key in keys.keys():
        text = '\n *'.join((text, key))
    bot.reply_to(message, text)


# CONVERT –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ–≤–æ–¥–∞ –≤–∞–ª—é—Ç.
@bot.message_handler(content_types=['text', ])
def convert(message: telebot.types.Message):
    try:
        values = message.text.lower().split(' ')

        if len(values) != 3:
            raise ConvertionException('–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ 3 –ø–∞—Ä–∞–º–µ—Ç—Ä–∞')

        quote, base, amount = values
        total_base = CryptoConverter.get_price(quote, base, amount)
    except ConvertionException as e:
        bot.reply_to(message, f'–û—à–∏–±–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n*** {e} ***')
    except Exception as e:
        bot.reply_to(message, f'–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ–º–∞–Ω–¥—É\n*** {e} ***')
    else:
        text = f'–¶–µ–Ω–∞ {amount} {keys[quote]} = {total_base} {keys[base]}'
        bot.send_message(message.chat.id, text)


bot.polling()

'''

# —Ç–µ—Å—Ç
@bot.message_handler()
def echo(message: telebot.types.Message):
    bot.send_message(message.chat.id, 'Hi')
    
     *base_ticker = keys[base]
    
     *none_stop=True
'''


